package choiceComponent;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.event.ActionEvent;

import javax.swing.*;

public class ToolBarDemo extends JFrame {
	JMenuBar barr;
	JMenu file, edit, view;
	JMenuItem save, open, exit;
	JCheckBoxMenuItem status;

	JPanel panel;
	JToolBar bar;

	public ToolBarDemo() {
		setTitle("Toolbar Frame");
		setSize(300, 400);

		panel = new JPanel();
		add(panel);

		// set action
		Action runaction = new AbstractAction("Run", new ImageIcon(getClass().getResource("run.png"))) {

			@Override
			public void actionPerformed(ActionEvent e) {
				panel.setBackground(Color.GREEN);
			}
		};

		Action openaction = new AbstractAction("Run", new ImageIcon(getClass().getResource("open.png"))) {

			@Override
			public void actionPerformed(ActionEvent e) {
				panel.setBackground(Color.BLUE);
			}
		};

		Action coloraction = new AbstractAction("Run", new ImageIcon(getClass().getResource("arrow.png"))) {

			@Override
			public void actionPerformed(ActionEvent e) {
				Color c = new JColorChooser().showDialog(panel, "select color--", Color.YELLOW);
				panel.setBackground(c);
			}
		};

		Action folderaction = new AbstractAction("Run", new ImageIcon(getClass().getResource("folder.png"))) {

			@Override
			public void actionPerformed(ActionEvent e) {
				new JFileChooser().showOpenDialog(panel);
			}
		};

		Action closeaction = new AbstractAction("Run", new ImageIcon(getClass().getResource("close.png"))) {

			@Override
			public void actionPerformed(ActionEvent e) {
				System.exit(0);
			}
		};

		JToolBar bar = new JToolBar();
		bar.add(runaction);
		bar.add(openaction);
		bar.add(coloraction);
		bar.add(closeaction);
		bar.add(folderaction);
		add(bar, BorderLayout.NORTH);// bar added to JFrame in north

		setVisible(true);
		setDefaultCloseOperation(EXIT_ON_CLOSE);
	}

	public static void main(String[] args) {
		new ToolBarDemo();
	}

}
